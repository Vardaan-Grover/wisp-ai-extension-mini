function mimicHumanScrolling(n) { const o = `\n        (function mimicHumanScrolling({ maxDuration }) {\n            return new Promise((resolve) => {\n                let scrolling = true;\n                const startTime = Date.now();\n\n                function randomScroll() {\n                    if (!scrolling) return;\n\n                    const currentScrollPosition = window.scrollY;\n                    const maxScrollPosition = document.documentElement.scrollHeight - window.innerHeight;\n\n                    const elapsedTime = Date.now() - startTime;\n                    if (elapsedTime >= maxDuration) {\n                        scrolling = false;\n                        resolve();\n                        return;\n                    }\n\n                    if (currentScrollPosition >= maxScrollPosition || maxScrollPosition <= 0) {\n                        scrolling = false;\n                        resolve();\n                        return;\n                    }\n\n                    const minScrollAmount = 200;\n                    const maxScrollAmount = 400;\n                    const minBetweenDelay = 500;\n                    const maxBetweenDelay = 2000;\n                    const betweenDelay = calculateRandomNumber(minBetweenDelay, maxBetweenDelay);\n                    let scrollAmount = calculateRandomNumber(minScrollAmount, maxScrollAmount);\n                    const scrollDirection = Math.random() < 0.95 ? 1 : -1;\n\n                    window.scrollBy({\n                        top: scrollAmount * scrollDirection,\n                        behavior: 'smooth',\n                    });\n\n                    setTimeout(randomScroll, betweenDelay);\n                }\n\n                randomScroll();\n            });\n        })({ maxDuration: ${n} });\n        \n        function calculateRandomNumber(min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    `; getCurrentCampaignTabId().then((n => { chrome.debugger.sendCommand({ tabId: n }, "Runtime.evaluate", { expression: o }, (function (n) { chrome.runtime.lastError && console.error("Failed to evaluate script:", chrome.runtime.lastError.message) })) })) } self.mimicHumanScrolling = mimicHumanScrolling;